#place Idle0 mk(<..>)
#place WaitLeft0
#place HasLeft0
#place WaitRight0
#place HasRight0
#place Fork0 mk(<..>)
#place IsEating0
#trans GoEat0
in {Idle0:<..>;}
out {WaitLeft0:<..>;WaitRight0:<..>;}
#endtr
#trans GoLeft0
in {WaitLeft0:<..>;}
out {HasLeft0:<..>;}
#endtr
#trans GoRight0
in {Fork0:<..>;WaitRight0:<..>;}
out {HasRight0:<..>;}
#endtr
#trans Eat0
in {HasLeft0:<..>;HasRight0:<..>;}
out {IsEating0:<..>;}
#endtr
#trans Release0
in {IsEating0:<..>;}
out {Idle0:<..>;Fork0:<..>;}
#endtr
#trans GoLeft1
in {Fork0:<..>;}
out {}
#endtr
#trans Release1
in {}
out {Fork0:<..>;}
#endtr