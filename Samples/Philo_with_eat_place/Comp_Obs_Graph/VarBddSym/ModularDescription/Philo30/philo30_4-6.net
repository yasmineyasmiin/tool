#place Idle3 mk(<..>)
#place WaitLeft3
#place HasLeft3
#place WaitRight3
#place HasRight3
#place Fork3 mk(<..>)
#place IsEating3
#place Idle4 mk(<..>)
#place WaitLeft4
#place HasLeft4
#place WaitRight4
#place HasRight4
#place Fork4 mk(<..>)
#place IsEating4
#place Idle5 mk(<..>)
#place WaitLeft5
#place HasLeft5
#place WaitRight5
#place HasRight5
#place Fork5 mk(<..>)
#place IsEating5
#trans GoEat3
in {Idle3:<..>;}
out {WaitLeft3:<..>;WaitRight3:<..>;}
#endtr
#trans GoLeft3
in {WaitLeft3:<..>;}
out {HasLeft3:<..>;}
#endtr
#trans GoRight3
in {Fork3:<..>;WaitRight3:<..>;}
out {HasRight3:<..>;}
#endtr
#trans Eat3
in {HasLeft3:<..>;HasRight3:<..>;}
out {IsEating3:<..>;}
#endtr
#trans Release3
in {IsEating3:<..>;}
out {Idle3:<..>;Fork3:<..>;}
#endtr
#trans GoEat4
in {Idle4:<..>;}
out {WaitLeft4:<..>;WaitRight4:<..>;}
#endtr
#trans GoLeft4
in {Fork3:<..>;WaitLeft4:<..>;}
out {HasLeft4:<..>;}
#endtr
#trans GoRight4
in {Fork4:<..>;WaitRight4:<..>;}
out {HasRight4:<..>;}
#endtr
#trans Eat4
in {HasLeft4:<..>;HasRight4:<..>;}
out {IsEating4:<..>;}
#endtr
#trans Release4
in {IsEating4:<..>;}
out {Idle4:<..>;Fork3:<..>;Fork4:<..>;}
#endtr
#trans GoEat5
in {Idle5:<..>;}
out {WaitLeft5:<..>;WaitRight5:<..>;}
#endtr
#trans GoLeft5
in {Fork4:<..>;WaitLeft5:<..>;}
out {HasLeft5:<..>;}
#endtr
#trans GoRight5
in {Fork5:<..>;WaitRight5:<..>;}
out {HasRight5:<..>;}
#endtr
#trans Eat5
in {HasLeft5:<..>;HasRight5:<..>;}
out {IsEating5:<..>;}
#endtr
#trans Release5
in {IsEating5:<..>;}
out {Idle5:<..>;Fork4:<..>;Fork5:<..>;}
#endtr
#trans GoLeft6
in {Fork5:<..>;}
out {}
#endtr
#trans Release6
in {}
out {Fork5:<..>;}
#endtr
