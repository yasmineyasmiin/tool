#place Idle8 mk(<..>)
#place WaitLeft8
#place HasLeft8
#place WaitRight8
#place HasRight8
#place Fork8 mk(<..>)
#place IsEating8
#place Idle9 mk(<..>)
#place WaitLeft9
#place HasLeft9
#place WaitRight9
#place HasRight9
#place Fork9 mk(<..>)
#place IsEating9
#trans GoEat8
in {Idle8:<..>;}
out {WaitLeft8:<..>;WaitRight8:<..>;}
#endtr
#trans GoLeft8
in {WaitLeft8:<..>;}
out {HasLeft8:<..>;}
#endtr
#trans GoRight8
in {Fork8:<..>;WaitRight8:<..>;}
out {HasRight8:<..>;}
#endtr
#trans Eat8
in {HasLeft8:<..>;HasRight8:<..>;}
out {IsEating8:<..>;}
#endtr
#trans Release8
in {IsEating8:<..>;}
out {Idle8:<..>;Fork8:<..>;}
#endtr
#trans GoEat9
in {Idle9:<..>;}
out {WaitLeft9:<..>;WaitRight9:<..>;}
#endtr
#trans GoLeft9
in {Fork8:<..>;WaitLeft9:<..>;}
out {HasLeft9:<..>;}
#endtr
#trans GoRight9
in {Fork9:<..>;WaitRight9:<..>;}
out {HasRight9:<..>;}
#endtr
#trans Eat9
in {HasLeft9:<..>;HasRight9:<..>;}
out {IsEating9:<..>;}
#endtr
#trans Release9
in {IsEating9:<..>;}
out {Idle9:<..>;Fork8:<..>;Fork9:<..>;}
#endtr
#trans GoLeft0
in {Fork9:<..>;}
out {}
#endtr
#trans Release0
in {}
out {Fork9:<..>;}
#endtr
